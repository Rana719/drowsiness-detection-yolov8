# -*- coding: utf-8 -*-
"""Drowsiness detection .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Avg7jqyV7O_6HshJtYku3NA7eqPX5ZSt
"""

!pip install ultralytics roboflow opencv-python

# !pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="HLjQjo7aRlDMf8aXc5Ve")
project = rf.workspace("karthik-madhvan").project("drowsiness-detection-xsriz")
version = project.version(1)
dataset = version.download("yolov8")

from ultralytics import YOLO

# Load the pre-trained YOLOv8 model
model = YOLO('yolov8n.pt')  # Use 'yolov8s.pt' or 'yolov8m.pt' if you want stronger performance

# Train it on your dataset
model.train(
    data='drowsiness-detection-1/data.yaml',  # Path to your YAML file
    epochs=50,
    imgsz=640,
    batch=16
)

model.val()

model.predict(
    source='drowsiness-detection-1/test/images',  # correct path
    save=True,
    save_txt=True,
    conf=0.5
)

results = model.predict('/content/drowsiness-detection-1/test/images', save=True)

for result in results:
    print(f"Image path: {result.path}")
    boxes = result.boxes
    if boxes is not None:
        for i in range(len(boxes)):
            cls_id = int(boxes.cls[i].item())  # Get class ID
            class_name = result.names[cls_id]  # Get class name
            conf = boxes.conf[i].item()  # Confidence
            xyxy = boxes.xyxy[i].tolist()  # Bounding box [x1, y1, x2, y2]

            print(f"  - Class: {class_name} ({cls_id}), Conf: {conf:.2f}, Box: {xyxy}")
    else:
        print("  - No detections found.")

from ultralytics import YOLO

model = YOLO("runs/detect/train/weights/best.pt")

from google.colab import files
files.download("runs/detect/train/weights/best.pt")



